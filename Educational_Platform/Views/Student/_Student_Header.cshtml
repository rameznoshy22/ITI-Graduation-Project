@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<link rel="stylesheet" href="~/css/Student_Style.css" />

<style>
    /* Base Styles */
    :root {
        --primary-color: #06BBCC;
        --primary-dark: #035F69;
        --text-color: #333;
        --light-gray: #f8f9fa;
        --danger-color: #dc3545;
    }

    .arfont {
        font-family: "Cairo", sans-serif;
        font-size: 1.1rem;
    }

    .icons div {
        font-size: 2rem;
        color: #06BBCC;
        background-color: var(--light-bg);
        border-radius: .5rem;
        height: 4.5rem;
        width: 4.5rem;
        line-height: 4.5rem;
        cursor: pointer;
        text-align: center;
        margin-left: .7rem;
    }

        .icons div:hover {
            background-color: var(--black);
            color: var(--white);
        }
    /* Logo Styles */
    .logo {
        font-family: 'Cairo', sans-serif;
        font-size: 2rem;
        color: var(--primary-color);
        display: inline-flex;
        align-items: center;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

        .logo i {
            font-size: 1.6rem;
            margin-right: 0.5rem;
            transition: transform 0.3s ease;
        }

        .logo:hover {
            color: var(--primary-dark);
            text-decoration: none;
        }

            .logo:hover i {
                transform: rotate(15deg) translateY(-2px);
            }

    /* Navbar Container */
    .navbar {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        padding: 0.5rem 0;
        background-color: white !important;
        position: sticky;
        top: 0;
        z-index: 1030;
        direction: ltr; /* Force LTR layout */
    }

    /* Navigation Links */
    .nav-link {
        font-family: 'Cairo', sans-serif;
        font-weight: 600;
        padding: 0.75rem 1.25rem;
        margin: 0 0.15rem;
        color: var(--text-color) !important;
        transition: all 0.25s ease;
        position: relative;
        border-radius: 0.5rem;
    }

        .nav-link:hover,
        .nav-link:focus {
            color: var(--primary-color) !important;
            background-color: rgba(6, 187, 204, 0.08);
        }

        .nav-link:after {
            content: '';
            position: absolute;
            width: 0;
            height: 3px;
            bottom: 0;
            left: 0;
            background-color: var(--primary-color);
            transition: width 0.3s ease;
            border-radius: 3px 3px 0 0;
        }

        .nav-link:hover:after {
            width: 100%;
        }

    /* Active Link Styling */
    .nav-item.active .nav-link {
        color: var(--primary-color) !important;
        font-weight: 700;
    }

        .nav-item.active .nav-link:after {
            width: 100%;
        }

    /* Dropdown Menu */
    .dropdown-menu {
        border: none;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.12);
        border-radius: 0.75rem;
        padding: 0.5rem 0;
        margin-top: 0.5rem;
        min-width: 220px;
        border: 1px solid rgba(0, 0, 0, 0.05);
        text-align: right; /* Right-align Arabic text */
    }

    .dropdown-item {
        padding: 0.75rem 1.5rem;
        font-family: 'Cairo', sans-serif;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: flex-end; /* Right-align content */
        font-size: 0.95rem;
        direction: rtl; /* RTL for Arabic text */
    }

        .dropdown-item:hover {
            background-color: rgba(6, 187, 204, 0.08);
            color: var(--primary-color);
            transform: translateX(-3px);
        }

        .dropdown-item i {
            margin-left: 10px; /* Space between icon and Arabic text */
            width: 18px;
            text-align: center;
            font-size: 0.9rem;
        }

    .dropdown-divider {
        margin: 0.5rem 0;
        border-color: rgba(0, 0, 0, 0.05);
    }

    /* Profile Image */
    .profile-img {
        width: 36px;
        height: 36px;
        object-fit: cover;
        border: 2px solid rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
    }

    .dropdown-toggle:hover .profile-img {
        border-color: var(--primary-color);
        transform: scale(1.05);
    }

    /* Buttons */
    .auth-btn {
        padding: 0.75rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        letter-spacing: 0.5px;
        box-shadow: 0 4px 12px rgba(6, 187, 204, 0.2);
        font-family: 'Cairo', sans-serif;
    }

        .auth-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(6, 187, 204, 0.3);
        }

    /* Responsive Adjustments */
    @@media (max-width: 992px) {
        .navbar-collapse {
            padding: 1rem 0;
            background-color: white;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            border-radius: 0 0 1rem 1rem;
        }

        .nav-link {
            padding: 0.75rem 1.5rem;
            margin: 0.15rem 0;
        }

        .auth-btn {
            margin: 1rem 1.5rem 0;
            display: block;
            width: calc(100% - 3rem);
        }
    }

    /* Animation */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .dropdown-menu {
        animation: fadeIn 0.25s ease-out forwards;
    }


    /* Dark Mode Styles */
    body.dark-mode {
        background-color: #121212;
        color: #ffffff;
    }

        body.dark-mode .navbar {
            background-color: #1e1e1e !important;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }

        body.dark-mode .nav-link {
            color: #e0e0e0 !important;
        }

            body.dark-mode .nav-link:hover,
            body.dark-mode .nav-link:focus {
                color: var(--primary-color) !important;
            }

        body.dark-mode .side-bar {
            background-color: #1e1e1e;
            box-shadow: 0 0 15px rgba(0,0,0,0.3);
        }

        body.dark-mode .dropdown-menu {
            background-color: #2d2d2d;
            border-color: #444;
        }

        body.dark-mode .dropdown-item {
            color: #e0e0e0;
        }

            body.dark-mode .dropdown-item:hover {
                background-color: rgba(6, 187, 204, 0.2);
            }



    /* Ultra Compact Footer Styles */
    .footer {
        line-height: 1.3;
    }

    .btn-social {
        width: 28px;
        height: 28px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .footer a {
        text-decoration: none;
        transition: all 0.2s;
    }

        .footer a:hover {
            color: var(--primary-color) !important;
        }


    /* Dark Mode Variables */
    body.dark-mode {
        --box-bg: #2d2d2d;
        --text-color: #e0e0e0;
        --text-muted: #aaaaaa;
        --primary-color: #06BBCC;
    }

    /* Light Mode Variables (default) */
    body:not(.dark-mode) {
        --box-bg: #f8f9fa;
        --text-color: #333;
        --text-muted: #666;
        --primary-color: #06BBCC;
    }
</style>

@* <!-- Navbar Start -->
<nav class="navbar navbar-expand-lg navbar-light sticky-top">
    <div class="container">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center px-4 px-lg-5">
            <h1 class="m-0 logo">
                <i class="fa fa-book ms-3">مفهوم</i>
            </h1>
        </a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
                    @Html.ActionLink("الرئيسية", "Index", "Home", null, new { @class = "nav-link arfont" })
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "About" ? "active" : "")">
                    @Html.ActionLink("من نحن", "About", "Home", null, new { @class = "nav-link arfont" })
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Courses" ? "active" : "")">
                    @Html.ActionLink("الكورسات", "Courses", "Home", null, new { @class = "nav-link arfont" })
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                    @Html.ActionLink("تواصل معنا", "Contact", "Home", null, new { @class = "nav-link arfont" })
                </li>
            </ul>

            <ul class="navbar-nav">
                @if (User.Identity.IsAuthenticated)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            @if (!string.IsNullOrEmpty(User.FindFirst("ProfilePicture")?.Value))
                            {
                                <img src="~/files/studentImage/@User.FindFirst("ProfilePicture")?.Value"
                                     alt="Profile"
                                     class="rounded-circle profile-img me-2"
                                     onerror="this.onerror=null;this.src='https://via.placeholder.com/36?text=User';">
                            }
                            else
                            {
                                <span class="rounded-circle me-2 d-inline-flex align-items-center justify-content-center bg-primary text-white"
                                      style="width:36px;height:36px;font-size:1rem;">
                                    @User.Identity.Name.Substring(0, 1).ToUpper()
                                </span>
                            }
                            <span class="d-none d-lg-inline">@User.Identity.Name</span>
                        </a>

                        <ul class="dropdown-menu" aria-labelledby="userDropdown">
                            @if (User.IsInRole("Student"))
                            {
                                <li class="dropdown-item">
                                    @Html.ActionLink("الملف الشخصي", "StudentProfile", "Student", null, new { @class = "d-flex justify-content-end w-100" })
                                    <i class="fas fa-user ms-2"></i>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                            }
                            else if (User.IsInRole("Instructor"))
                            {
                                <li class="dropdown-item">
                                    @Html.ActionLink("لوحة التحكم", "Index", "Lesson", null, new { @class = "d-flex justify-content-end w-100" })
                                    <i class="fas fa-tachometer-alt ms-2"></i>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                            }
                            <li class="dropdown-item">
                                @Html.ActionLink("تسجيل الخروج", "SignOut", "Account", null, new { @class = "d-flex justify-content-end w-100 text-danger" })
                                <i class="fas fa-sign-out-alt ms-2 text-danger"></i>
                            </li>
                        </ul>
                    </li>
                    <div class="icons">
                        <div id="menu-btn" class="fas fa-bars"></div>
                        @* <div id="search-btn" class="fas fa-search"></div> *@
@* <div id="user-btn" class="fas fa-user"></div> 
                        <div id="toggle-btn" class="fas fa-sun"></div>
                    </div>
                }
                else
                {
                    <li class="nav-item">
                        @Html.ActionLink("انضم الينا", "Login", "Account", null, new { @class = "btn btn-primary auth-btn arfont" })
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>*@
<!-- Navbar End -->
<!-- Navbar Start -->
<nav class="navbar navbar-expand-lg navbar-light sticky-top">
    <div class="container">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center px-4 px-lg-5">
            <h1 class="m-0 logo">
                <i class="fa fa-book ms-3">مفهوم</i>
            </h1>
        </a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
                    @Html.ActionLink("الرئيسية", "Index", "Home", null, new { @class = "nav-link arfont" })
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "About" ? "active" : "")">
                    @Html.ActionLink("من نحن", "About", "Home", null, new { @class = "nav-link arfont" })
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Courses" ? "active" : "")">
                    @Html.ActionLink("الكورسات", "Courses", "Home", null, new { @class = "nav-link arfont" })
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                    @Html.ActionLink("تواصل معنا", "Contact", "Home", null, new { @class = "nav-link arfont" })
                </li>
            </ul>

            <ul class="navbar-nav">
                @if (User.Identity.IsAuthenticated)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            @if (!string.IsNullOrEmpty(User.FindFirst("ProfilePicture")?.Value))
                            {
                                <img src="~/files/studentImage/@User.FindFirst("ProfilePicture")?.Value"
                                     alt="Profile"
                                     class="rounded-circle profile-img me-2"
                                     onerror="this.onerror=null;this.src='https://via.placeholder.com/36?text=User';">
                            }
                            else
                            {
                                <span class="rounded-circle me-2 d-inline-flex align-items-center justify-content-center bg-primary text-white"
                                      style="width:36px;height:36px;font-size:1rem;">
                                    @User.Identity.Name.Substring(0, 1).ToUpper()
                                </span>
                            }
                            <span class="d-none d-lg-inline">@User.Identity.Name</span>
                        </a>

                        <ul class="dropdown-menu" aria-labelledby="userDropdown">
                            @if (User.IsInRole("Student"))
                            {
                                <li class="dropdown-item">
                                    @Html.ActionLink("الملف الشخصي", "StudentProfile", "Student", null, new { @class = "d-flex justify-content-end w-100" })
                                    <i class="fas fa-user ms-2"></i>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                            }
                            else if (User.IsInRole("Instructor"))
                            {
                                <li class="dropdown-item">
                                    @Html.ActionLink("لوحة التحكم", "Index", "Lesson", null, new { @class = "d-flex justify-content-end w-100" })
                                    <i class="fas fa-tachometer-alt ms-2"></i>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                            }
                            <li class="dropdown-item">
                                @Html.ActionLink("تسجيل الخروج", "SignOut", "Account", null, new { @class = "d-flex justify-content-end w-100 text-danger" })
                                <i class="fas fa-sign-out-alt ms-2 text-danger"></i>
                            </li>
                        </ul>
                    </li>
                    <div class="icons">
                        <div id="menu-btn" class="fas fa-bars"></div>
                        @* <div id="toggle-btn" class="fas fa-sun"></div> *@
                    </div>
                }
                else
                {
                    <li class="nav-item">
                        @Html.ActionLink("انضم الينا", "Login", "Account", null, new { @class = "btn btn-primary auth-btn arfont" })
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>
<!-- Navbar End -->



@* <div class="side-bar">

    <div id="close-btn">
        <i class="fas fa-times"></i>
    </div>

    <div class="profile">
        @if (string.IsNullOrEmpty(Model.CurrentProfilePicture))
        {
            <img src="~/files/studentImage/مجهول.png"
                 class="image"
                 alt="Unknown Profile Picture"
                 onerror="this.onerror=null;this.src='https://via.placeholder.com/150?text=No+Image';" />
        }
        else
        {
            <img src="~/files/studentImage/@Model.CurrentProfilePicture" 
                 class="image"
                 alt="Profile Picture"
                 onerror="this.onerror=null;this.src='https://via.placeholder.com/150?text=No+Image';" />
        }

        <h3 class="name">@Model.FirstName @Model.LastName</h3>
        <p class="role">student</p>
        <p class="role"><i class="fas fa-envelope"></i> @Model.Email</p>
        <p class="role"><i class="fas fa-graduation-cap"></i> @Model.GradeLevel</p>

        <a href="profile.html" class="btn">view profile</a>
    </div>

    <nav class="navbar">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center px-4 px-lg-5">
            <i class="fas fa-home"></i><span>home</span>
        </a>
        <a href="about.html"><i class="fas fa-question"></i><span>about</span></a>
        <a href="courses.html"><i class="fas fa-graduation-cap"></i><span>courses</span></a>
        <a href="contact.html"><i class="fas fa-headset"></i><span>contact us</span></a>
    </nav>

</div> *@

<div class="side-bar ">



    <div class="profile">
        @if (string.IsNullOrEmpty(Model.CurrentProfilePicture))
        {
            <img src="~/files/studentImage/مجهول.png"
                 class="image"
                 alt="Unknown Profile Picture"
                 onerror="this.onerror=null;this.src='https://via.placeholder.com/150?text=No+Image';" />
        }
        else
        {
            <img src="~/files/studentImage/@Model.CurrentProfilePicture"
                 class="image"
                 alt="Profile Picture"
                 onerror="this.onerror=null;this.src='https://via.placeholder.com/150?text=No+Image';" />
        }

        <h3 class="name">@Model.FirstName @Model.LastName</h3>
        <p class="role">student</p>
        <p class="role">
            <i class="fas fa-envelope"></i>
            @if (Model.Email.Length > 20)
            {
                <span title="@Model.Email">
                    @Model.Email.Substring(0, 10)...@Model.Email.Substring(Model.Email.IndexOf('@'))
                </span>
            }
            else
            {
                @Model.Email
            }
        </p>
        <p class="role"><i class="fas fa-graduation-cap"></i> @Model.GradeLevel</p>

        <a asp-action="UpdateProfile" asp-controller="Student" class="inline-btn" style="margin-top: 1rem;">update profile</a>
    </div>

    <nav class="navbar">

        <a href="courses.html"><i class="fas fa-graduation-cap"></i><span>courses</span></a>

    </nav>

</div>
@* -------------------------------------------- *@
@* <section class="profile" style="width: 100%; max-width: 100%; padding: 2rem;">

    <div class="details" style="width: 100%; display: flex; flex-direction: column; align-items: center;">

        <div class="profile-info" style="width: 100%; display: flex; flex-direction: column; align-items: center; margin-bottom: 2rem;">
            @if (string.IsNullOrEmpty(Model.CurrentProfilePicture))
            {
                <img src="~/files/studentImage/مجهول.png"
                     class="image"
                     alt="Unknown Profile Picture"
                     style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%; border: 5px solid #06BBCC;"
                     onerror="this.onerror=null;this.src='https://via.placeholder.com/200?text=No+Image';" />
            }
            else
            {
                <img src="~/files/studentImage/@Model.CurrentProfilePicture"
                     class="image"
                     alt="Profile Picture"
                     style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%; border: 5px solid #06BBCC;"
                     onerror="this.onerror=null;this.src='https://via.placeholder.com/200?text=No+Image';" />
            }
            <h3 class="name" style="font-size: 2rem; margin-top: 1rem; color: #333;">@Model.FirstName @Model.LastName</h3>
            <p style="font-size: 1.2rem; color: #666;">student</p>
            <a asp-action="UpdateProfile" asp-controller="Student" class="inline-btn" style="margin-top: 1rem;">update profile</a>
        </div>
        <div class="box-container" style="width: 100%; display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem;">

            <div class="box" style="background: var(--box-bg, #f8f9fa); border-radius: 0.5rem; padding: 2rem; text-align: center; transition: all 0.3s ease;">
                <div class="flex" style="display: flex; align-items: center; justify-content: center; gap: 1rem; margin-bottom: 1rem;">
                    <i class="fas fa-bookmark" style="font-size: 2rem; color: var(--primary-color, #06BBCC);"></i>
                    <div>
                        <span style="font-size: 2rem; font-weight: bold; display: block; color: var(--text-color, #333);">4</span>
                        <p style="margin: 0; color: var(--text-muted, #666);">saved playlist</p>
                    </div>
                </div>
                <a href="#" class="inline-btn" style="display: inline-block; padding: 0.5rem 1.5rem; background: var(--primary-color, #06BBCC); color: white; border-radius: 0.5rem; text-decoration: none; transition: all 0.3s ease;">view playlists</a>
            </div>

            <div class="box" style="background: var(--box-bg, #f8f9fa); border-radius: 0.5rem; padding: 2rem; text-align: center; transition: all 0.3s ease;">
                <div class="flex" style="display: flex; align-items: center; justify-content: center; gap: 1rem; margin-bottom: 1rem;">
                    <i class="fas fa-heart" style="font-size: 2rem; color: var(--primary-color, #06BBCC);"></i>
                    <div>
                        <span style="font-size: 2rem; font-weight: bold; display: block; color: var(--text-color, #333);">33</span>
                        <p style="margin: 0; color: var(--text-muted, #666);">videos liked</p>
                    </div>
                </div>
                <a href="#" class="inline-btn" style="display: inline-block; padding: 0.5rem 1.5rem; background: var(--primary-color, #06BBCC); color: white; border-radius: 0.5rem; text-decoration: none; transition: all 0.3s ease;">view liked</a>
            </div>

            <div class="box" style="background: var(--box-bg, #f8f9fa); border-radius: 0.5rem; padding: 2rem; text-align: center; transition: all 0.3s ease;">
                <div class="flex" style="display: flex; align-items: center; justify-content: center; gap: 1rem; margin-bottom: 1rem;">
                    <i class="fas fa-comment" style="font-size: 2rem; color: var(--primary-color, #06BBCC);"></i>
                    <div>
                        <span style="font-size: 2rem; font-weight: bold; display: block; color: var(--text-color, #333);">12</span>
                        <p style="margin: 0; color: var(--text-muted, #666);">videos comments</p>
                    </div>
                </div>
                <a href="#" class="inline-btn" style="display: inline-block; padding: 0.5rem 1.5rem; background: var(--primary-color, #06BBCC); color: white; border-radius: 0.5rem; text-decoration: none; transition: all 0.3s ease;">view comments</a>
            </div>

        </div>
    </div>
    </div>

</section> *@
<section class="profile" style="width: 100%; max-width: 100%; padding: 2rem;">

    @* <div class="details" style="width: 100%; display: flex; flex-direction: column; align-items: center;"> *@

    @*     <div class="profile-info" style="width: 100%; display: flex; flex-direction: column; align-items: center; margin-bottom: 2rem;"> *@
    @*         @if (string.IsNullOrEmpty(Model.CurrentProfilePicture)) *@
    @*         { *@
    @*             <img src="~/files/studentImage/مجهول.png" *@
    @*                  class="image" *@
    @*                  alt="Unknown Profile Picture" *@
    @*                  style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%; border: 5px solid #06BBCC;" *@
    @*                  onerror="this.onerror=null;this.src='https://via.placeholder.com/200?text=No+Image';" /> *@
    @*         } *@
    @*         else *@
    @*         { *@
    @*             <img src="~/files/studentImage/@Model.CurrentProfilePicture" *@
    @*                  class="image" *@
    @*                  alt="Profile Picture" *@
    @*                  style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%; border: 5px solid #06BBCC;" *@
    @*                  onerror="this.onerror=null;this.src='https://via.placeholder.com/200?text=No+Image';" /> *@
    @*         } *@
    @*         <h3 class="name" style="font-size: 2rem; margin-top: 1rem; color: #333;">@Model.FirstName @Model.LastName</h3> *@
    @*         <p style="font-size: 1.2rem; color: #666;">student</p> *@
    @*         <a asp-action="UpdateProfile" asp-controller="Student" class="inline-btn" style="margin-top: 1rem;">update profile</a> *@
    @*     </div> *@
    <div class="box-container" style="width: 100%; display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem;">

        <div class="box" style="background: var(--box-bg, #f8f9fa); border-radius: 0.5rem; padding: 2rem; text-align: center; transition: all 0.3s ease;">
            <div class="flex" style="display: flex; align-items: center; justify-content: center; gap: 1rem; margin-bottom: 1rem;">


                <i class="fas fa-book" style="font-size: 2rem; color: var(--primary-color, #06BBCC);"></i>
                <div>
                    <span style="font-size: 2rem; font-weight: bold; display: block; color: var(--text-color, #333);">@Model.EnrolledCourses.Count</span>
                    <p style="margin: 0; color: var(--text-muted, #666);">My Courses</p>
                </div>
            </div>
            @* <a href="#" class="inline-btn" style="display: inline-block; padding: 0.5rem 1.5rem; background: var(--primary-color, #06BBCC); color: white; border-radius: 0.5rem; text-decoration: none; transition: all 0.3s ease;">view Courses</a> *@
        </div>




    </div>



</section>

@* ----------------------------------- *@
@* ---footer *@








<script>
    // Add active class based on current page
    document.addEventListener('DOMContentLoaded', function() {
        // Highlight active nav item
        const currentPath = window.location.pathname;
        document.querySelectorAll('.nav-link').forEach(link => {
            if (link.getAttribute('href') === currentPath) {
                link.classList.add('active');
                link.closest('.nav-item').classList.add('active');
            }
        });

        // Initialize Bootstrap dropdowns
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
        var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
            return new bootstrap.Dropdown(dropdownToggleEl);
        });
    });



        document.addEventListener('DOMContentLoaded', function() {
        // Sidebar functionality
        const menuBtn = document.getElementById('menu-btn');
        const closeBtn = document.getElementById('close-btn');
        const sideBar = document.querySelector('.side-bar');
        const body = document.body;

        // Toggle sidebar function
        function toggleSidebar() {
            sideBar.classList.toggle('active');
            body.classList.toggle('active');
        }

        // Menu button click handler
        if (menuBtn) {
            menuBtn.addEventListener('click', function(e) {
                e.preventDefault();
                toggleSidebar();
            });
        }

        // Close button click handler
        if (closeBtn) {
            closeBtn.addEventListener('click', function(e) {
                e.preventDefault();
                sideBar.classList.remove('active');
                body.classList.remove('active');
            });
        }

        // Close sidebar when clicking outside
        document.addEventListener('click', function(e) {
            if (!sideBar.contains(e.target) && e.target !== menuBtn) {
                sideBar.classList.remove('active');
                body.classList.remove('active');
            }
        });

        // Dark mode functionality
        const toggleBtn = document.getElementById('toggle-btn');
        let darkMode = localStorage.getItem('dark-mode');

        // Enable dark mode
        const enableDarkMode = () => {
            body.classList.add('dark-mode');
            toggleBtn.classList.replace('fa-sun', 'fa-moon');
            localStorage.setItem('dark-mode', 'enabled');
        };

        // Disable dark mode
        const disableDarkMode = () => {
            body.classList.remove('dark-mode');
            toggleBtn.classList.replace('fa-moon', 'fa-sun');
            localStorage.setItem('dark-mode', 'disabled');
        };

        // Check current mode
        if (darkMode === 'enabled') {
            enableDarkMode();
        }

        // Toggle button click handler
        if (toggleBtn) {
            toggleBtn.addEventListener('click', function(e) {
                e.preventDefault();
                darkMode = localStorage.getItem('dark-mode');
                if (darkMode === 'disabled') {
                    enableDarkMode();
                } else {
                    disableDarkMode();
                }
            });
        }

        // Rest of your existing code
        const currentPath = window.location.pathname;
        document.querySelectorAll('.nav-link').forEach(link => {
            if (link.getAttribute('href') === currentPath) {
                link.classList.add('active');
                link.closest('.nav-item').classList.add('active');
            }
        });

        // Initialize Bootstrap dropdowns
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
        var dropdownList = dropdownElementList.map(function(dropdownToggleEl) {
            return new bootstrap.Dropdown(dropdownToggleEl);
        });
    });
</script>