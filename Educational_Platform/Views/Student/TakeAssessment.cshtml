@model Assignment
@{
    ViewData["Title"] = "حل الواجب";
    Layout = null;
}

<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap 5 RTL -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- Google Fonts - Tajawal -->
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700;900&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary: #6C4DF6; /* لون بنفسجي جذاب */
            --secondary: #FF7E67; /* لون برتقالي مرجاني */
            --accent: #42E6A4; /* لون أخضر نيون */
            --dark: #2D3047; /* لون أزرق داكن */
            --light: #F8F9FA; /* لون خلفية فاتح */
        }

        body {
            background-color: #F0F4FF;
            font-family: 'Tajawal', sans-serif;
            color: var(--dark);
        }

        .exam-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .exam-header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 10px 20px rgba(108, 77, 246, 0.2);
            position: relative;
            overflow: hidden;
        }

            .exam-header::before {
                content: "";
                position: absolute;
                top: -50px;
                right: -50px;
                width: 200px;
                height: 200px;
                background: rgba(255, 255, 255, 0.1);
                border-radius: 50%;
            }

        .exam-title {
            font-weight: 900;
            font-size: 2.2rem;
            margin-bottom: 10px;
            position: relative;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .question-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
            margin-bottom: 25px;
            background: white;
            transition: transform 0.3s, box-shadow 0.3s;
            overflow: hidden;
        }

            .question-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
            }

        .question-number {
            display: inline-block;
            width: 35px;
            height: 35px;
            background: var(--primary);
            color: white;
            border-radius: 50%;
            text-align: center;
            line-height: 35px;
            font-weight: bold;
            margin-left: 10px;
        }

        .question-text {
            font-size: 1.2rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 20px;
            padding: 20px 25px 0;
        }

        .options-container {
            padding: 0 20px 20px;
        }

        .option-label {
            display: block;
            padding: 15px 20px;
            margin: 10px 0;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s;
            border: 2px solid #E9ECEF;
            background: white;
            font-weight: 500;
            position: relative;
        }

            .option-label:hover {
                transform: translateX(5px);
                border-color: var(--primary);
                box-shadow: 0 5px 15px rgba(108, 77, 246, 0.1);
            }

        .option-radio:checked + .option-label {
            background: rgba(108, 77, 246, 0.05);
            border-color: var(--primary);
            color: var(--primary);
            font-weight: 700;
        }

            .option-radio:checked + .option-label::after {
                content: "\f00c";
                font-family: "Font Awesome 6 Free";
                font-weight: 900;
                position: absolute;
                left: 15px;
                top: 50%;
                transform: translateY(-50%);
                color: var(--primary);
            }

        .option-letter {
            display: inline-block;
            width: 25px;
            height: 25px;
            background: var(--accent);
            color: white;
            border-radius: 50%;
            text-align: center;
            line-height: 25px;
            font-weight: bold;
            margin-left: 10px;
        }

        .btn-submit {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border: none;
            border-radius: 50px;
            padding: 12px 35px;
            font-size: 1.2rem;
            font-weight: 700;
            letter-spacing: 1px;
            box-shadow: 0 5px 15px rgba(108, 77, 246, 0.3);
            transition: all 0.3s;
            margin-top: 20px;
        }

            .btn-submit:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 20px rgba(108, 77, 246, 0.4);
            }

        #timer {
            background: var(--dark);
            color: white;
            font-size: 1.2rem;
            font-weight: 700;
            padding: 8px 20px;
            border-radius: 50px;
            box-shadow: 0 4px 10px rgba(45, 48, 71, 0.2);
        }

        .progress-container {
            height: 8px;
            background: #E9ECEF;
            border-radius: 10px;
            margin-bottom: 30px;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, var(--accent), var(--primary));
            transition: width 0.5s;
        }
    </style>
</head>
<body>
    <div class="container py-5 exam-container">
        <div class="exam-header text-center">
            <h1 class="exam-title">@Model.Title</h1>
            <div class="d-flex justify-content-between align-items-center mt-4">
                <div>
                    <span class="badge bg-light text-dark fs-6">
                        <i class="fas fa-question-circle me-2"></i> عدد الأسئلة: @Model.assignment_Question.Count
                    </span>
                </div>
                <div id="timer">
                    <i class="fas fa-clock me-2"></i><span>@((Model.duration < 10) ? "0" + Model.duration : Model.duration):00</span>
                </div>
            </div>
        </div>

        <div class="progress-container">
            <div class="progress-bar" id="examProgress" style="width: 0%"></div>
        </div>

        <form asp-action="SubmitAssignment" method="post" class="mt-2">
            <input type="hidden" name="assignmentId" value="@Model.ID" />

            @{
                int questionNum = 1;
                int totalQuestions = Model.assignment_Question.Count;
            }
            @foreach (var eq in Model.assignment_Question)
            {
                <div class="question-card">
                    <h4 class="question-text">
                        <span class="question-number">@questionNum</span>
                        @eq.Question.QuestionText
                    </h4>

                    <div class="options-container">
                        <input type="radio" id="q@(eq.QuestionID)_1" name="answers[@eq.QuestionID]" value="1" class="option-radio d-none">
                        <label for="q@(eq.QuestionID)_1" class="option-label">
                            <span class="option-letter">أ</span> @eq.Question.q1
                        </label>

                        <input type="radio" id="q@(eq.QuestionID)_2" name="answers[@eq.QuestionID]" value="2" class="option-radio d-none">
                        <label for="q@(eq.QuestionID)_2" class="option-label">
                            <span class="option-letter">ب</span> @eq.Question.q2
                        </label>

                        @if (!string.IsNullOrEmpty(eq.Question.q3))
                        {
                            <input type="radio" id="q@(eq.QuestionID)_3" name="answers[@eq.QuestionID]" value="3" class="option-radio d-none">
                            <label for="q@(eq.QuestionID)_3" class="option-label">
                                <span class="option-letter">ج</span> @eq.Question.q3
                            </label>

                            <input type="radio" id="q@(eq.QuestionID)_4" name="answers[@eq.QuestionID]" value="4" class="option-radio d-none">
                            <label for="q@(eq.QuestionID)_4" class="option-label">
                                <span class="option-letter">د</span> @eq.Question.q4
                            </label>
                        }
                    </div>
                </div>
                questionNum++;
            }

            <div class="text-center">
                <button type="submit" class="btn btn-submit">
                    <i class="fas fa-paper-plane me-2"></i> تسليم الإجابات
                </button>
            </div>
        </form>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>
        // مؤقت الامتحان
        let timeLeft = 60*@Model.duration;//60 * @Model.duration;
        const timerElement = document.getElementById("timer");
        const timer = setInterval(() => {
            timeLeft--;
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;
            timerElement.innerHTML = `<i class="fas fa-clock me-2"></i><span>${minutes}:${seconds.toString().padStart(2, '0')}</span>`;

            // تغيير لون المؤقت عندما يقل الوقت عن 5 دقائق
            if (timeLeft <= 300) {
                timerElement.style.background = "linear-gradient(135deg, #FF7E67, #FF4757)";
            }

            if (timeLeft <= 0) {
                clearInterval(timer);
                submitAssignmentWithAnswers(); // استدعاء دورة إرسال الإجابات عند انتهاء الوقت
            }
        }, 1000);

        // شريط التقدم
        const progressBar = document.getElementById("examProgress");
        const totalQuestions = @Model.assignment_Question.Count;
        let answeredQuestions = 0;

        // تحديث شريط التقدم عند اختيار إجابة
        $(document).ready(function() {
            $('.option-radio').change(function() {
                answeredQuestions = $('.option-radio:checked').length;
                const progressPercent = (answeredQuestions / totalQuestions) * 100;
                progressBar.style.width = `${progressPercent}%`;

                // تغيير لون شريط التقدم بناءً على النسبة
                if (progressPercent < 30) {
                    progressBar.style.background = "linear-gradient(90deg, #FF7E67, #FF4757)";
                } else if (progressPercent < 70) {
                    progressBar.style.background = "linear-gradient(90deg, #FFD166, #FF7E67)";
                } else {
                    progressBar.style.background = "linear-gradient(90deg, #42E6A4, #6C4DF6)";
                }
            });

            // تأثيرات عند اختيار الإجابات
            $('.option-label').click(function() {
                $(this).parent().find('.option-label').removeClass('active');
                $(this).addClass('active');
            });
        });

        // دالة لإنشاء وإرسال الإجابات
        function submitAssignmentWithAnswers() {
            // Create the answers dictionary
            const answers = {};

            // Loop through all questions
            $('.question-card').each(function() {
                const questionId = $(this).find('input[type="radio"]').first().attr('name').match(/\[(\d+)\]/)[1];
                const selectedOption = $(this).find('input[type="radio"]:checked').val();

                if (selectedOption) {
                    answers[questionId] = selectedOption;
                }
                else{
                     answers[questionId]=0;
                }
            });

            // إضافة رسالة تنبيه بأن الوقت انتهى مع عدد الأسئلة المجابة
            const answeredCount = Object.keys(answers).length;
            alert(`انتهى وقت الواجب! تم تسجيل ${answeredCount} من أصل ${totalQuestions} أسئلة`);

            // Add the answers dictionary to a hidden input
            $('<input>').attr({
                type: 'hidden',
                name: 'answersJson',
                value: JSON.stringify(answers)
            }).appendTo('form');

            // Submit the form
            document.querySelector("form").submit();
        }

        // Modify the form submission to build the answers dictionary
        $('form').submit(function(e) {
            // منع الإرسال المباشر للاستعاضة عن ذلك بدورتنا
            if (timeLeft > 0) {
                e.preventDefault();

                // Create the answers dictionary
                const answers = {};
                let allAnswered = true;

                // Loop through all questions
                $('.question-card').each(function() {
                    const questionId = $(this).find('input[type="radio"]').first().attr('name').match(/\[(\d+)\]/)[1];
                    const selectedOption = $(this).find('input[type="radio"]:checked').val();

                    if (selectedOption) {
                        answers[questionId] = selectedOption;
                    } else {
                        allAnswered = false;
                        $(this).css('border-left', '3px solid #FF4757');
                    }
                });

                if (!allAnswered) {
                    alert('الرجاء الإجابة على جميع الأسئلة قبل التسليم');
                    return;
                }

                // Add the answers dictionary to a hidden input
                $('<input>').attr({
                    type: 'hidden',
                    name: 'answersJson',
                    value: JSON.stringify(answers)
                }).appendTo('form');

                // Submit the form
                this.submit();
            }
        });
    </script>
</body>
</html>